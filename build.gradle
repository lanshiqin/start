/*
 * 本项目使用IDEA集成开发环境，所以在gradle构建脚本中添加了 'idea' 插件
 * 第一次初始化项目时，不建议IDE直接打开工程，因为每个人的开发环境和构建工具不同
 * 建议使用如下步骤
 * git clone git@github.com:lanshiqin/start.git
 * cd start
 * ./gradlew idea
 * 执行完成后，会生成一个.ipr文件，这个就是IDEA的工程文件，此时用IDEA打开这个文件即可。
 */
buildscript {
    dependencies {
        classpath "mysql:mysql-connector-java:$mysqlVersion"
    }
}
plugins {
    id "org.flywaydb.flyway" version "${flywayVersion}"
}

// 配置 gradle 构建工具
wrapper {
    gradleVersion = '6.4.1'
}

// 所有项目模块配置
allprojects {
    apply plugin: 'idea'
}

// 子项目模块配置
subprojects {
    apply plugin: 'java'

    group = 'com.lanshiqin.start'
    version = new Date().format('yyyyMMdd') + '-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xlint:deprecation"
    }

    repositories {
        // 优先使用国内仓库源
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        jcenter()
        mavenCentral()
        maven { url "https://repo.maven.apache.org/maven2" }
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter:$springBootVersion")
        implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
        implementation("org.springframework.boot:spring-boot-starter-validation:$springBootVersion")
        implementation("org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion")
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }


        // 文档
        implementation("com.github.xiaoymin:knife4j-spring-boot-starter:$knife4jVersion")

        // 测试工具
        testImplementation("org.testng:testng:$testNGVersion")
        testImplementation("org.mockito:mockito-core:$mockitoVersion")

        // 增强工具
        implementation("org.projectlombok:lombok:$lombokVersion")

        // 数据库相关
        implementation("com.baomidou:mybatis-plus-boot-starter:$mybatisPlusVersion")
        implementation("mysql:mysql-connector-java:$mysqlVersion")


    }

    test {
        useTestNG()
    }

    apply from: "$rootDir/gradle/config/scripts/style.gradle"
    apply from: "$rootDir/gradle/config/scripts/coverage.gradle"

    coverage.excludePackages = [
    ]

    coverage.excludeClasses = [
    ]

    style.excludePackages = [
    ]

    style.excludeClasses = [
    ]

}

configure(subprojects - project(':boot')) {
    project(':boot').dependencies {
        implementation(project)
    }
}

apply from: "$rootDir/gradle/config/scripts/idea.gradle"

flyway {
    url = 'jdbc:mysql://localhost:3306/start?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true'
    user = 'root'
    password = '12345678'
    locations = ["filesystem:$rootDir/gradle/config/migration"]
}